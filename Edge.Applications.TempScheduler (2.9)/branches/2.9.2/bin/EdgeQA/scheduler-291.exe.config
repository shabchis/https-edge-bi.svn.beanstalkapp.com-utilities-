<?xml version="1.0" encoding="utf-8"?>
<configuration>

	<configSections>
		<section name="SmtpConnection" type="System.Configuration.SingleTagSectionHandler"/>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
	</configSections>

	<!--===========================================================-->
	<!--                                     LOG Settings                               -->
	<!-- ======================================================== -->
	<log4net debug="true">
		<appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="/log4net.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="10MB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%-5p %d %5rms %-22.22c{1} %-18.18M - %m%n" />
			</layout>
		</appender>
		<appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
			<bufferSize value="1" />
			<connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
			<connectionString value="data source = 79.125.11.74;initial catalog=Seperia_System_291;integrated security=true;" />
			<commandText value="INSERT INTO Log ([DateRecorded],[MachineName],[ProcessID],[Source],[MessageType],[ServiceInstanceID],[AccountID],[Message],[IsException],[ExceptionDetails]) 
           VALUES (@dateRecorded, @machineName, @processID, @source, @messageType, @serviceInstanceID,@accountID,@message,@isException,@exceptionDetails)" />
			<parameter>
				<parameterName value="@dateRecorded" />
				<dbType value="DateTime" />
				<layout type="log4net.Layout.RawTimeStampLayout">
					<conversionPattern value="%property{@dateRecorded}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@machineName" />
				<dbType value="String" />
				<size value="255" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@machineName}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@processID" />
				<dbType value="Int32" />
				<size value="8" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@processID}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@source" />
				<dbType value="String" />
				<size value="255" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@source}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@messageType" />
				<dbType value="Int32" />
				<size value="8" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@messageType}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@serviceInstanceID" />
				<dbType value="Int64" />
				<size value="10" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@serviceInstanceID}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@accountID" />
				<dbType value="Int32" />
				<size value="8" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@accountID}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@message" />
				<dbType value="String" />
				<size value="4000" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@message}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@isException" />
				<dbType value="Boolean" />
				<size value="1" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@isException}" />
				</layout>
			</parameter>
			<parameter>
				<parameterName value="@exceptionDetails" />
				<dbType value="String" />
				<size value="4000" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%property{@exceptionDetails}" />
				</layout>
			</parameter>
		</appender>
		<appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
			<to value="alon.yaari@edge.bi" />
			<from value="alon.yaari@edge.bi" />
			<subject value="Hello from log4net" />
			<smtpHost value="mx.edge.bi" />
			<bufferSize value="512" />
			<lossy value="true" />
			<evaluator type="log4net.Core.LevelEvaluator">
				<threshold value="WARN"/>
			</evaluator>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%newline%date [%thread] %-5level %logger [%property{NDC}] - %message%newline%newline%newline" />
			</layout>
		</appender>

		<root>
			<level value="DEBUG" />
			<!--<appender-ref ref="RollingLogFileAppender" />-->
			<appender-ref ref="AdoNetAppender" />
			<!--<appender-ref ref="SmtpAppender" />-->
		</root>
	</log4net>


	<!-- ======================================================== -->
	<!--                                     App Settings                               -->
	<!-- ======================================================== -->
	<appSettings>
		<add key="Edge.Core.Services.Service.BaseListeningUrl" value="net.tcp://localhost:3535/{0}"/>
		<add key="Edge.Data.Pipeline.FileManager.RootPath" value="d:\test"/>
		<add key="Edge.Data.Pipeline.FileManager.BufferSize" value="20"/>

		<add key="Edge.Core.Scheduling.Scheduler.Percentile" value="80" />
		<add key="Edge.Core.Scheduling.Scheduler.NeededScheduleTimeLine" value="02:00:00" />
		<add key="Edge.Core.Scheduling.Scheduler.IntervalBetweenNewSchedule" value="00:03:00" />
		<add key="Edge.Core.Scheduling.Scheduler.FindServicesToRunInterval" value="00:01" />
		<add key="Edge.Core.Scheduling.Scheduler.DeleteEndedServiceInterval" value="23:59:00" />

	</appSettings>

	<connectionStrings>
		<add name="Edge.Core.Scheduling.Scheduler.OLTP" connectionString="Data Source=79.125.11.74;Initial Catalog=Seperia;Integrated Security=false;User ID=edge1;PWD=Blublu*2!"/>
		<add name="Edge.Services.Google.Adwords.AdwordsReport.SystemDatabase" connectionString="Data Source=79.125.11.74;Initial Catalog=Seperia;Integrated Security=false;User ID=SeperiaServices;PWD=Asada2011!" />
	</connectionStrings>

  <SmtpConnection
                     server="mail.authsmtp.com"
                     port="25" user="ac56719"
                     pass="D035643BCD6EF35312B7B58A7154F082"
                     UseDefaultCredentials = "false"
                     EnableSsl = "false">
  </SmtpConnection>
  
  
  <!--<SmtpConnection
				  server="70.39.235.94"
				  port="25" user="edge.alerts@seperia.com"
				  pass="D035643BCD6EF35312B7B58A7154F082"
				  UseDefaultCredentials = "false"
				  EnableSsl = "false">
	</SmtpConnection>-->
  
	<!-- ======================================================== -->
	<!--                       WCF configuration                                        -->
	<!-- ======================================================== -->
	<system.serviceModel>
		<!--Server configuration-->
		<!--<diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
    </diagnostics>-->

		<services>
			<service name="Edge.Applications.TempScheduler.Listener" behaviorConfiguration="behavior">
				<endpoint binding="wsHttpBinding" bindingConfiguration="edgeServiceWebBinding" contract="Edge.Core.Scheduling.IScheduleManager" address="http://localhost:27334/v2.1/ScheduleManagerSeperia" />
			</service>

		</services>

		<client>
			<endpoint name="shaybarchen" binding="wsHttpBinding" bindingConfiguration="edgeServiceWebBinding" contract="Edge.Core.Scheduling.IScheduleManager" address="http://localhost:27334/v2.1/ScheduleManagerSeperia" />
			<endpoint address="https://adcenterapi.microsoft.com/Api/Advertiser/V8/Reporting/ReportingService.svc"
			   binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IReportingService"
			   contract="AdCenter.Reporting.IReportingService" name="AdCenter.Reporting.IReportingService" />
		</client>

		<behaviors>
			<serviceBehaviors>
				<behavior name="behavior">
					<serviceMetadata httpGetEnabled="false" />
					<serviceDebug includeExceptionDetailInFaults="true" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<bindings>
			<netTcpBinding>
				<binding name="Edge.Core.Services.Service.InstanceToEngineBinding" portSharingEnabled="true" receiveTimeout="1:0:0" />
			</netTcpBinding>
			<wsHttpBinding>
				<binding name="edgeServiceWebBinding" sendTimeout="0:10:00" receiveTimeout="0:10:00" />
			</wsHttpBinding>
			<basicHttpBinding>
				<binding name="BasicHttpBinding_IReportingService" closeTimeout="00:01:00"
		 openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
		 allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
		 maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
		 messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
		 useDefaultWebProxy="true">
					<readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
		  maxBytesPerRead="4096" maxNameTableCharCount="16384" />
					<security mode="Transport">
						<transport clientCredentialType="None" proxyCredentialType="None"
		   realm="" />
						<message clientCredentialType="UserName" algorithmSuite="Default" />
					</security>
				</binding>
			</basicHttpBinding>
		</bindings>
	</system.serviceModel>
	<system.web>
		<webServices>
			<soapExtensionTypes>
				<add type="Google.Api.Ads.Common.Lib.SoapListenerExtension, Google.AdWords.v201209" priority="1" group="Low"/>
			</soapExtensionTypes>
		</webServices>
	</system.web>
</configuration>
