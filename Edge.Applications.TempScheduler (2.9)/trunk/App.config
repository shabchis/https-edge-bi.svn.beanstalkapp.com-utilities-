<?xml version="1.0" encoding="utf-8"?>
<configuration>

	<configSections>
		<section name="SmtpConnection" type="System.Configuration.SingleTagSectionHandler"/>
	</configSections>
	
	<!-- ======================================================== -->
	<!--						App Settings					  -->
	<!-- ======================================================== -->
	<appSettings>
		<add key="Edge.Core.Services.Service.BaseListeningUrl" value="net.tcp://localhost:3535/{0}"/>
		<add key="Edge.Data.Pipeline.FileManager.RootPath" value="d:\test"/>
		<add key="Edge.Data.Pipeline.Delivery.Db4o.FileName" value="Edge.Deliveries.db4o"/>
		<add key="Edge.Data.Pipeline.Delivery.Db4o.Port" value="2121"/>
		<add key="Edge.Data.Pipeline.FileManager.BufferSize" value="20"/>
		<add key="Edge.Data.Pipeline.Delivery.Db4o.User" value="sa"/>
		<add key="Edge.Data.Pipeline.Delivery.Db4o.Password" value="sa"/>
		
		<add key="Edge.Core.Scheduling.Scheduler.Percentile" value="80" />
		<add key="Edge.Core.Scheduling.Scheduler.NeededScheduleTimeLine" value="02:00:00" />
		<add key="Edge.Core.Scheduling.Scheduler.IntervalBetweenNewSchedule" value="00:03:00" />
		<add key="Edge.Core.Scheduling.Scheduler.FindServicesToRunInterval" value="00:01" />
		<add key="Edge.Core.Scheduling.Scheduler.DeleteEndedServiceInterval" value="23:59:00" />	
	</appSettings>
	
	<connectionStrings>
		<add name="Edge.Core.Scheduling.Scheduler.OLTP" connectionString="Data Source=alonya-pc;;Initial Catalog=testdb;Integrated Security=false;User ID=sa;PWD=Iuh2sstd" />
		<add name="Edge.Data.Pipeline.Delivery.DB" connectionString="Host=alonya-pc;; User=sa; Password=sa; Port=2121; Integrated Security=false;User ID=sa;PWD=Iuh2sstd"/>
		<add name="Edge.Services.Google.Adwords.AdwordsReport.SystemDatabase" connectionString="Data Source=alonya-pc;; Database=Edge_System; Integrated Security=false;User ID=sa;PWD=Iuh2sstd"/>
	</connectionStrings>
	<SmtpConnection
			server="70.39.235.94"
			port="25" user="edge.alerts@seperia.com"
			pass="D035643BCD6EF35312B7B58A7154F082"
			UseDefaultCredentials = "false"
			EnableSsl = "false">
	</SmtpConnection>
	<!-- ======================================================== -->
	<!--				WCF configuration						  -->
	<!-- ======================================================== -->
	<system.serviceModel>
		<!--Server configuration-->
		<!--<diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
    </diagnostics>-->

		<services>
			<service name="Edge.Applications.TempScheduler.Listener" behaviorConfiguration="behavior">
				<endpoint binding="wsHttpBinding" bindingConfiguration="edgeServiceWebBinding" contract="Edge.Core.Scheduling.IScheduleManager" address="http://localhost:27334/v2.1/ScheduleManagerSeperia" />
			</service>
			
		</services>

		<client>
			<endpoint binding="wsHttpBinding" bindingConfiguration="edgeServiceWebBinding" contract="Edge.Core.Scheduling.IScheduleManager" address="http://localhost:27334/v2.1/ScheduleManagerSeperia" />
			<endpoint address="https://adcenterapi.microsoft.com/Api/Advertiser/V8/Reporting/ReportingService.svc"
			   binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IReportingService"
			   contract="AdCenter.Reporting.IReportingService" name="AdCenter.Reporting.IReportingService" />
		</client>

		<behaviors>
			<serviceBehaviors>
				<behavior name="behavior">
					<serviceMetadata httpGetEnabled="false" />
					<serviceDebug includeExceptionDetailInFaults="true" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<bindings>
			<netTcpBinding>
				<binding name="Edge.Core.Services.Service.InstanceToEngineBinding" portSharingEnabled="true" receiveTimeout="1:0:0" />
			</netTcpBinding>
			<wsHttpBinding>
				<binding name="edgeServiceWebBinding" sendTimeout="0:10:00" receiveTimeout="0:10:00" />
			</wsHttpBinding>
			<basicHttpBinding>
				<binding name="BasicHttpBinding_IReportingService" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
                    maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
                    messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
                    useDefaultWebProxy="true">
					<readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
					<security mode="Transport">
						<transport clientCredentialType="None" proxyCredentialType="None"
                            realm="" />
						<message clientCredentialType="UserName" algorithmSuite="Default" />
					</security>
				</binding>
			</basicHttpBinding>
		</bindings>
	</system.serviceModel>
	<!--<system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Warning, ActivityTracing" propagateActivity="true">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="server.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
      <add initializeData="server.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>-->
</configuration>